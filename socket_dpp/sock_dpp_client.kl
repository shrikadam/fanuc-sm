PROGRAM SOCK_DPP_CLIENT
------------------------------------------------------------------------------------------
%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE = ERROR + COMMAND + TPENABLE
%ENVIRONMENT flbt
%ENVIRONMENT regope
------------------------------------------------------------------------------------------
VAR 
    status      : INTEGER
    comm_file   : FILE 
    goal_pose   : XYZWPR
    num_paths   : INTEGER
    x_goal      : REAL
    y_goal      : REAL
    z_goal      : REAL
    w_goal      : REAL
    p_goal      : REAL
    r_goal      : REAL
    mv_ack  	: INTEGER
------------------------------------------------------------------------------------------
BEGIN 
    -- Clear TP Screen
    WRITE(CHR(128), CHR(137))
    FORCE_SPMENU(TP_PANEL, SPI_TPUSER, 1)
    WRITE('Started Socket DPM Client Program.', cr)
    WRITE('Connecting to Server...', cr)

    -- Zero Init the PosReg
    goal_pose.x = 0.0
    goal_pose.y = 0.0
    goal_pose.z = 0.0
    goal_pose.w = 0.0
    goal_pose.p = 0.0
    goal_pose.r = 0.0
    SET_POS_REG(64, goal_pose, status)

    -- Clean Start Server Tag
    MSG_DISCO('C6:', status)
    CLOSE FILE comm_file

    -- Connect to Client
    SET_FILE_ATR(comm_file, ATR_UF)
    MSG_CONNECT('C6:', status)

    IF status = 0 THEN
        -- Accept the Connection
        OPEN FILE comm_file('rw', 'C6:')
		WRITE('Server Connection Accepted.', cr)

        -- Dynamic Path Planning
        WRITE comm_file (41)
        WRITE('Ready to Start Dyn Path Planning...', cr)
        num_paths = 0
        WHILE (num_paths < 5) DO
            goal_pose = CURPOS(0, 0)
            READ comm_file (x_goal, y_goal, z_goal, w_goal, p_goal, r_goal)
            WRITE('New Goal Pose Received!', cr)
            goal_pose.x = x_goal
            goal_pose.y = y_goal
            goal_pose.z = z_goal
            goal_pose.w = w_goal
            goal_pose.p = p_goal
            goal_pose.r = r_goal
            SET_POS_REG(64, goal_pose, status)
            CALL_PROG('DPP_MOVEL', status)
            WRITE comm_file (42)
            num_paths = num_paths + 1
        ENDWHILE

        -- Close the Connection
        WRITE('Disconnecting...', cr)
        MSG_DISCO('C6:', status)
        WRITE('Done.', cr)
    ENDIF 
END SOCK_DPP_CLIENT